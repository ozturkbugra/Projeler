<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AACVqp4Ak6udAKOlowKkpKMFo6SjCaSkpA6lpKMSpKSkFqOkpBmjpKQdpKSjIKSkpCOkpKQlpKSkJqSk
        pCekpKQppKSkKaSkpCekpKQmpKSkJaSkpCOkpKMgo6SkHaOkpBqkpKQWpaSjEqSkpA6jpKMKpKSjBaOk
        owKfp6QAnqekAKSkowakpKQupKSkWqSlp3CkpaeBpKWnj6Slp5qkpaekpKWnq6SkpbKkpKS3pKSku6Sk
        pb2kpaa+pKWmvqSlpsGkpabBpKWmvqSlpr6kpKW+pKSku6SkpLekpKWypKWnq6Slp6SkpaebpKWnkaSl
        p4SkpadypKSkXKSkpDSkpKMJpKSjCaSkpT+ko6B9opR0zaGOYu+hj2T0oo9l+KKPZfqikWv6o56S5KSk
        pdekpKXbpKGc46KTcfuikGb+opBn/6KQZ/+ikGb+opNx+6ShnOSkpKXbpKSl2KOekuSikWv6oo9l+6KP
        Zfihj2T1oY5i8aKUdc+ko6CApKSkR6Skow2kpKQAptj/AqOHSTKifi7non0q/6J9Kf+ifSn/on0p/6J9
        Kv+ihkappKWoOKSnrDmjjVuDon4t/aJ9Kf+ifSn/on0p/6J9Kf+ifi39o41bhKSnrDmkpag4ooZGqaJ9
        Kv+ifSn/on0p/6J9Kv+ifSr/on4u56OHSTOk0P8Cn6aiAAAAAAClgDAApYAwM6aAL+6mgS//poEv/6aB
        L/+mgS//poEv/6WAL5udkG4BpYAuAKWBMWSlgC7+pYAu/6WALv+lgC7/pYAu/6WALv6lgTFkpYAuAJ2Y
        hwGlgTCbpYAu/6WALv+lgC7/pYAu/6WALv+lgC7upYAvM6WALwAAAAAAAAAAAKmEMgCphDIzqYQy7amE
        Mv+phDL/qYQy/6mEMv+phDL/qYQym6F8KgGpgzIAqYMyZKmDMv6pgzL/qYMy/6mDMv+pgzL/qYMy/qmD
        MmSpgzIAmXsxAamDMZupgzH/qYMx/6mDMf+pgzH/qYMx/6mDMe2ogzEzqIMxAAAAAAAAAAAArIc1AKyH
        NTOshzXtrIc1/6yHNf+shzX/rIc1/6yHNf+shzWbrH8tAayHNQCshzVkrIc1/qyHNf+shzX/rIc1/6yH
        Nf+shzX+rIc1ZKyHNQCkdyUBrIc1m6yHNf+shzX/rIc1/6yHNf+shzX/rIc17ayGNDOshjQAAAAAAAAA
        AACxijkAsYo5M7GKOe2xijn/sYo5/7GKOf+xijn/sYo5/7GKOZupijEBsIo4ALCKOGSwijj+sIo4/7CK
        OP+wijj/sIo4/7CKOP6wijhksIo4AKiCMAGwijibsIo4/7CKOP+wijj/sIo4/7CKOP+wijjtsIo4M7CK
        OAAAAAAAAAAAALWOPQC1jj0ztI097rSNPP+1jTz/tY08/7WNPP+0jTz/tY49m7GRNQG0jTwAtI08ZLSN
        PP60jTz/tI08/7SNPP+0jTz/tI08/rSNPGS0jTwAq4wsAbOMPJuzjDz/s4w8/7OMPP+zjDz/s4w8/7OM
        PO2zjDszs4w7AAAAAAAAAAAAupNDALuURDG9l0jsupRD/7mTQv+5k0L/uZNC/7yVRv+9lkeYAAAAALeQ
        PwC3kD9kt5A//reQP/+3kD//t5A//7eQP/+3kD/+t5A/ZLeQPwCviDcBt5A/m7eQP/+3kD//t5A//7eQ
        P/+3kD//t5A/7beQPzO3kD8AAAAAAAAAAAC9lUUAvJNDEMKdT5nFoVbOxKFVzMShVczEoVXNxKBUxL+Z
        SkzCnE8Au5NCALuTQmS7k0L+u5NC/7uTQv+7k0L/u5NC/7uTQv67k0Jku5NCALqTQgG6k0KbupNC/7qT
        Qv+6k0L/upNC/7qTQv+6k0LtupNCM7qTQgAAAAAAAAAAAKqCLADAmEgAupJAB8CYSRHBmksRwZpLEcGa
        SxG9lkUOtY04AbeOOgC/lkUAv5ZFZL+WRf6/lkX/v5ZF/7+WRf+/lkX/v5ZF/r+WRWS/lkUAto49Ab6W
        RZu+lkX/vpZF/76WRf++lkX/vpZF/76WRe2+lkUzvpZFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMOaSQDCmUlkw5pJ/sOaSf/Dmkn/w5pJ/8OaSf/Dmkn+wplJZMOa
        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
        A///AAP//8AD///wB///8B////B////h//8=
</value>
  </data>
</root>